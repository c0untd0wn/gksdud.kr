// Generated by CoffeeScript 1.8.0
(function() {
  var cont, convert_gksdud, final_letter_map, final_letters, fix_double_final_letters, fix_double_medial_letters, initial_letters, medial_letter_map, medial_letters, qwerty, result, separate_double_final_letters, separate_double_medial_letters, two_set_korean;

  qwerty = ['q', 'Q', 'w', 'W', 'e', 'E', 'r', 'R', 't', 'T', 'y', 'u', 'i', 'o', 'O', 'p', 'P', 'a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'z', 'x', 'c', 'v', 'b', 'n', 'm'];

  two_set_korean = ['ㅂ', 'ㅃ', 'ㅈ', 'ㅉ', 'ㄷ', 'ㄸ', 'ㄱ', 'ㄲ', 'ㅅ', 'ㅆ', 'ㅛ', 'ㅕ', 'ㅑ', 'ㅐ', 'ㅒ', 'ㅔ', 'ㅖ', 'ㅁ', 'ㄴ', 'ㅇ', 'ㄹ', 'ㅎ', 'ㅗ', 'ㅓ', 'ㅏ', 'ㅣ', 'ㅋ', 'ㅌ', 'ㅊ', 'ㅍ', 'ㅠ', 'ㅜ', 'ㅡ'];

  initial_letters = ["ㄱ", "ㄲ", "ㄴ", "ㄷ", "ㄸ", "ㄹ", "ㅁ", "ㅂ", "ㅃ", "ㅅ", "ㅆ", "ㅇ", "ㅈ", "ㅉ", "ㅊ", "ㅋ", "ㅌ", "ㅍ", "ㅎ"];

  medial_letters = ["ㅏ", "ㅐ", "ㅑ", "ㅒ", "ㅓ", "ㅔ", "ㅕ", "ㅖ", "ㅗ", "ㅘ", "ㅙ", "ㅚ", "ㅛ", "ㅜ", "ㅝ", "ㅞ", "ㅟ", "ㅠ", "ㅡ", "ㅢ", "ㅣ"];

  final_letters = ["", "ㄱ", "ㄲ", "ㄳ", "ㄴ", "ㄵ", "ㄶ", "ㄷ", "ㄹ", "ㄺ", "ㄻ", "ㄼ", "ㄽ", "ㄾ", "ㄿ", "ㅀ", "ㅁ", "ㅂ", "ㅄ", "ㅅ", "ㅆ", "ㅇ", "ㅈ", "ㅊ", "ㅋ", "ㅌ", "ㅍ", "ㅎ"];

  result = "";

  cont = 0;

  medial_letter_map = {
    "ㅘ": ["ㅗ", "ㅏ"],
    "ㅙ": ["ㅗ", "ㅐ"],
    "ㅚ": ["ㅗ", "ㅣ"],
    "ㅝ": ["ㅜ", "ㅓ"],
    "ㅞ": ["ㅜ", "ㅔ"],
    "ㅟ": ["ㅜ", "ㅣ"],
    "ㅢ": ["ㅡ", "ㅣ"]
  };

  fix_double_medial_letters = function(m1, m2) {
    var k, v;
    for (k in medial_letter_map) {
      v = medial_letter_map[k];
      if (v[0] === m1 && v[1] === m2) {
        return k;
      }
    }
    return void 0;
  };

  separate_double_medial_letters = function(m) {
    return medial_letter_map[m];
  };

  final_letter_map = {
    "ㄲ": ["ㄱ", "ㄱ"],
    "ㄳ": ["ㄱ", "ㅅ"],
    "ㄵ": ["ㄴ", "ㅈ"],
    "ㄶ": ["ㄴ", "ㅎ"],
    "ㄺ": ["ㄹ", "ㄱ"],
    "ㄻ": ["ㄹ", "ㅁ"],
    "ㄼ": ["ㄹ", "ㅂ"],
    "ㄽ": ["ㄹ", "ㅅ"],
    "ㄾ": ["ㄹ", "ㅌ"],
    "ㄿ": ["ㄹ", "ㅍ"],
    "ㅀ": ["ㄹ", "ㅎ"],
    "ㅄ": ["ㅂ", "ㅅ"],
    "ㅆ": ["ㅅ", "ㅅ"]
  };

  fix_double_final_letters = function(f1, f2) {
    var k, v;
    for (k in final_letter_map) {
      v = final_letter_map[k];
      if (v[0] === f1 && v[1] === f2) {
        return k;
      }
    }
    return void 0;
  };

  separate_double_final_letters = function(f) {
    return final_letter_map[f];
  };

  convert_gksdud = function(str) {
    var ch, final_index, final_index2, final_letter, i, initial_index, initial_letter, m, medial_index, medial_index2, medial_letter, medial_space, mystery, _i, _j, _k, _l, _len, _len1, _len2, _len3, _m, _ref, _ref1, _ref2, _ref3, _ref4;
    result = "";
    for (i = _i = 0, _ref = str.length; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {
      if (cont > 0) {
        cont--;
        continue;
      }
      ch = str.charCodeAt(i);
      if (ch >= 0xAC00 && ch <= 0xD7AF) {
        ch -= 0xAC00;
        final_letter = ch % 28;
        medial_letter = ((ch - final_letter) / 28) % 21;
        initial_letter = (((ch - final_letter) / 28) - medial_letter) / 21;
        result += qwerty[two_set_korean.indexOf(initial_letters[initial_letter])].toLowerCase();
        if ((two_set_korean.indexOf(medial_letters[medial_letter])) >= 0) {
          result += qwerty[two_set_korean.indexOf(medial_letters[medial_letter])].toLowerCase();
        } else if ((medial_letters.indexOf(medial_letters[medial_letter])) >= 0) {
          _ref1 = separate_double_medial_letters(medial_letters[medial_letter]);
          for (_j = 0, _len = _ref1.length; _j < _len; _j++) {
            m = _ref1[_j];
            result += qwerty[two_set_korean.indexOf(m)].toLowerCase();
          }
        }
        if ((two_set_korean.indexOf(final_letters[final_letter])) >= 0) {
          result += qwerty[two_set_korean.indexOf(final_letters[final_letter])];
        } else if ((final_letters.indexOf(final_letters[final_letter])) >= 0 && (separate_double_final_letters(final_letters[final_letter]))) {
          _ref2 = separate_double_final_letters(final_letters[final_letter]);
          for (_k = 0, _len1 = _ref2.length; _k < _len1; _k++) {
            m = _ref2[_k];
            result += qwerty[two_set_korean.indexOf(m)].toLowerCase();
          }
        }
      } else if ((ch >= 0x1100 && ch <= 0x11FF) || (ch >= 0x3130 && ch <= 0x318E)) {
        if ((two_set_korean.indexOf(str.charAt(i))) >= 0) {
          result += qwerty[two_set_korean.indexOf(str.charAt(i))].toLowerCase();
        } else if ((medial_letters.indexOf(str.charAt(i))) >= 0) {
          _ref3 = separate_double_medial_letters(str.charAt(i));
          for (_l = 0, _len2 = _ref3.length; _l < _len2; _l++) {
            m = _ref3[_l];
            result += qwerty[two_set_korean.indexOf(m)].toLowerCase();
          }
        } else if ((final_letters.indexOf(str.charAt(i))) >= 0) {
          _ref4 = separate_double_final_letters(str.charAt(i));
          for (_m = 0, _len3 = _ref4.length; _m < _len3; _m++) {
            m = _ref4[_m];
            result += qwerty[two_set_korean.indexOf(m)].toLowerCase();
          }
        } else {
          console.log("처리불가");
        }
      } else if ((ch >= 0x0041 && ch <= 0x005A) || (ch >= 0x0061 && ch <= 0x007A)) {
        initial_index = initial_letters.indexOf(two_set_korean[qwerty.indexOf(str.charAt(i))]);
        if (initial_index === -1) {
          initial_index = initial_letters.indexOf(two_set_korean[qwerty.indexOf((str.charAt(i)).toLowerCase())]);
        }
        if (initial_index === -1) {
          mystery = two_set_korean[qwerty.indexOf(str.charAt(i))];
          if (mystery === void 0) {
            mystery = two_set_korean[qwerty.indexOf((str.charAt(i)).toLowerCase())];
          }
          result += mystery;
        } else {
          medial_index = medial_letters.indexOf(two_set_korean[qwerty.indexOf(str.charAt(i + 1))]);
          if (medial_index === -1 && (str.charAt(i + 1)) !== void 0) {
            medial_index = medial_letters.indexOf(two_set_korean[qwerty.indexOf((str.charAt(i + 1)).toLowerCase())]);
          }
          if (medial_index === -1) {
            result += initial_letters[initial_index];
          } else {
            medial_space = 1;
            medial_index2 = medial_letters.indexOf(two_set_korean[qwerty.indexOf(str.charAt(i + 2))]);
            if (medial_index2 !== -1 && (fix_double_medial_letters(two_set_korean[qwerty.indexOf(str.charAt(i + 1))], two_set_korean[qwerty.indexOf(str.charAt(i + 2))])) !== void 0) {
              medial_index = medial_letters.indexOf(fix_double_medial_letters(two_set_korean[qwerty.indexOf(str.charAt(i + 1))], two_set_korean[qwerty.indexOf(str.charAt(i + 2))]));
              medial_space++;
            }
            if ((str.charAt(i + medial_space + 2)) !== void 0 && ((medial_letters.indexOf(two_set_korean[qwerty.indexOf(str.charAt(i + medial_space + 2))])) !== -1 || (medial_letters.indexOf(two_set_korean[qwerty.indexOf((str.charAt(i + medial_space + 2)).toLowerCase())])) !== -1)) {
              result += String.fromCharCode(((initial_index * 21 + medial_index) * 28 + 0xAC00).toString());
              cont = medial_space;
            } else if ((str.charAt(i + medial_space + 1)) === void 0 || (qwerty.indexOf(str.charAt(i + medial_space + 1))) === -1) {
              result += String.fromCharCode(((initial_index * 21 + medial_index) * 28 + 0xAC00).toString());
              cont = medial_space;
            } else {
              final_index = final_letters.indexOf(two_set_korean[qwerty.indexOf(str.charAt(i + medial_space + 1))]);
              if (final_index === -1 && (str.charAt(i + medial_space + 1)) !== void 0) {
                final_index = final_letters.indexOf(two_set_korean[qwerty.indexOf((str.charAt(i + medial_space + 1)).toLowerCase())]);
              }
              final_index2 = final_letters.indexOf(two_set_korean[qwerty.indexOf(str.charAt(i + medial_space + 2))]);
              if (final_index2 === -1 && (str.charAt(i + medial_space + 2)) !== void 0) {
                final_index2 = final_letters.indexOf(two_set_korean[qwerty.indexOf((str.charAt(i + medial_space + 1)).toLowerCase())]);
              }
              if ((medial_letters.indexOf(two_set_korean[qwerty.indexOf(str.charAt(i + medial_space + 3))])) !== -1) {
                result += String.fromCharCode(((initial_index * 21 + medial_index) * 28 + final_index + 0xAC00).toString());
                cont = medial_space + 1;
              } else if (final_index2 !== -1 && (fix_double_final_letters(two_set_korean[qwerty.indexOf(str.charAt(i + medial_space + 1))], two_set_korean[qwerty.indexOf(str.charAt(i + medial_space + 2))])) !== void 0) {
                final_index = final_letters.indexOf(fix_double_final_letters(two_set_korean[qwerty.indexOf(str.charAt(i + medial_space + 1))], two_set_korean[qwerty.indexOf(str.charAt(i + medial_space + 2))]));
                result += String.fromCharCode(((initial_index * 21 + medial_index) * 28 + final_index + 0xAC00).toString());
                cont = medial_space + 2;
              } else {
                result += String.fromCharCode(((initial_index * 21 + medial_index) * 28 + final_index + 0xAC00).toString());
                cont = medial_space + 1;
              }
            }
          }
        }
      } else {
        result += str.charAt(i);
      }
    }
    return result;
  };

  window.convert_gksdud = convert_gksdud;

}).call(this);
